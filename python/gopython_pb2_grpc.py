# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import gopython_pb2 as gopython__pb2


class GoPythonStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitializeModel = channel.unary_unary(
                '/gopython.GoPython/InitializeModel',
                request_serializer=gopython__pb2.InitializeRequest.SerializeToString,
                response_deserializer=gopython__pb2.InitializeResponse.FromString,
                )
        self.ModelInference = channel.unary_unary(
                '/gopython.GoPython/ModelInference',
                request_serializer=gopython__pb2.InferenceRequest.SerializeToString,
                response_deserializer=gopython__pb2.InferenceResponse.FromString,
                )
        self.RemoveModel = channel.unary_unary(
                '/gopython.GoPython/RemoveModel',
                request_serializer=gopython__pb2.RemoveRequest.SerializeToString,
                response_deserializer=gopython__pb2.RemoveResponse.FromString,
                )


class GoPythonServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitializeModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModelInference(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GoPythonServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitializeModel': grpc.unary_unary_rpc_method_handler(
                    servicer.InitializeModel,
                    request_deserializer=gopython__pb2.InitializeRequest.FromString,
                    response_serializer=gopython__pb2.InitializeResponse.SerializeToString,
            ),
            'ModelInference': grpc.unary_unary_rpc_method_handler(
                    servicer.ModelInference,
                    request_deserializer=gopython__pb2.InferenceRequest.FromString,
                    response_serializer=gopython__pb2.InferenceResponse.SerializeToString,
            ),
            'RemoveModel': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveModel,
                    request_deserializer=gopython__pb2.RemoveRequest.FromString,
                    response_serializer=gopython__pb2.RemoveResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gopython.GoPython', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GoPython(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitializeModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gopython.GoPython/InitializeModel',
            gopython__pb2.InitializeRequest.SerializeToString,
            gopython__pb2.InitializeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ModelInference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gopython.GoPython/ModelInference',
            gopython__pb2.InferenceRequest.SerializeToString,
            gopython__pb2.InferenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gopython.GoPython/RemoveModel',
            gopython__pb2.RemoveRequest.SerializeToString,
            gopython__pb2.RemoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
